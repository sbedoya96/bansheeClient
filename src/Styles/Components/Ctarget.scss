
/*
I've used nested span elements for creating an animation of square turn and creating an arrow animation. But if you know other a solution please email me
melnik909@ya.ru
*/

/*
=====
LEVEL 1. CORE STYLES
=====
*/
.page{
    background: #EBEBEB;
    padding: 6%;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.16);
    border: 1px solid #333333;
}

.toggle{
    --uiToggleSize: var(--toggleSize, 20px);
    --uiToggleIndent: var(--toggleIndent, .4em);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, currentColor);
    --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
    --uiToggleArrowColor: var(--toggleArrowColor, #fff);
  
    display: inline-flex;
  }
  
  .toggle__input{
    position: absolute;
    left: -99999px;
  }
  
  .toggle__label{
    display: inline-flex;
    position: relative;
    min-height: var(--uiToggleSize);
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label{
    cursor: pointer;
  }
  
  .toggle__label::before,
  .toggle__label::after{
    content: "";
    box-sizing: border-box;  
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
  
    position: absolute;
    left: 0;
    top: calc(50% - .45em);
  }
  
  .toggle__label::before{
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
  }
  
  .toggle__input[type="radio"] ~ .toggle__label::before,
  .toggle__input[type="radio"] ~ .toggle__label::after{
    border-radius: 50%;
  }
  
  .toggle__input[type="radio"] ~ .toggle__label::after{
    transform: scale(.5);
  }
  
  .toggle__input:disabled ~ .toggle__label::before{
    border-color: var(--uiToggleDisabledColor);
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label::after{
    background-color: var(--uiToggleColor);
    opacity: 0;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label::after{
    will-change: opacity;
    transition: opacity .2s ease-out;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label::after{
    transition-duration: .1s;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label::after{
    opacity: 1;
  }
  
  .toggle__input[type="radio"]:not(:disabled) ~ .toggle__label::after{
    transform: scale(0);
    will-change: transform;
    transition: transform .1s ease-out;
  }
  
  .toggle__input[type="radio"]:not(:disabled):checked ~ .toggle__label::after{
    transform: scale(.5);
  }
  
  .toggle__text{
    position: relative;
    padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));  
    margin-top: auto;
    margin-bottom: auto;
    font-weight: bold;
    font-size: 14px;
    span{
        font-weight: unset;
    }
  }
  
  .toggle__input[type="checkbox"] ~ .toggle__label .toggle__text::before{
    content: "";
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
  
    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--uiToggleArrowColor);
  
    position: absolute;
    top: 55%;
    left: .2em;
    z-index: 3;
  
    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
  }
  
  .toggle__input[type="checkbox"]:not(:disabled):checked ~ .toggle__label .toggle__text::before{
    width: .45em;
    height: .2em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
    will-change: width, height;
    transition: width .1s ease-out .2s, height .2s ease-out;
  }
  
  /*
  =====
  LEVEL 2. PRESENTATION STYLES
  =====
  */
  
  /* 
  The demo skin
  */
  
  .toggle__input[type="checkbox"] ~ .toggle__label::before,
  .toggle__input[type="checkbox"] ~ .toggle__label::after{
    border-radius: 2px;
  }
  
  .toggle__input:focus ~ .toggle__label::before{
    box-shadow: 0 0 0 1px gray, 0 0 0 2px gray;
  }
  
  /* 
  The animation of switching states
  
  
  .toggle__input:not(:disabled) ~ .toggle__label:before,
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:before{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    transform: rotateY(90deg);
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:before{
    transform: rotateY(-90deg);
    transition-delay: 0s;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:after{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__text:before{
    opacity: 0;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
  }
  */
  /*
  =====
  LEVEL 3. SETTINGS
  =====
  */
  
  .toggle{
    --toggleColor: black;
    --toggleBgColor: black;
    --toggleSize: 30px;
    --toggleArrowWidth: 3px;
  }
  
  /*
  =====
  DEMO
  =====
  */
  
  /* 
  Patreon
  */
  